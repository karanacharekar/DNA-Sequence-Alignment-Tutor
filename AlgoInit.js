var app = angular.module("initapp", []);


app.controller("initctrl", function($scope){

	$scope.matrix1 = ["submat1" , "submat2"];
	$scope.matrix2 = ["PAM250" , "BLOSUM45" , "BLOSUM62"];
	$scope.submatrixN = [ 
						[[1,-1,-1,-1] ,[1,1,-1,-1],[1,-1,1,-1],[1,-1,-1,1]] , 
						[[1,-3,-3,-3] ,[-3,1,-3,-3],[-3,-3,1,-3],[-3,-3,-3,1]] ,
						];

	$scope.submatrixP = [ 
							[
							[13,6,9,9,5,8,9,12,6,8,6,7,7,4,11,11,11,2,4,9],
							[3,17,4,3,2,5,3,2,6,3,2,9,4,1,4,4,3,7,2,2],
							[4,4,6,7,2,5,6,4,6,3,2,5,3,2,4,5,4,2,3,3],
							[5,4,8,11,1,7,10,5,6,3,2,5,3,1,4,5,5,1,2,3],
							[2,1,1,1,52,1,1,2,2,2,1,1,1,1,2,3,2,1,4,2],
							[3,5,5,6,1,10,7,3,7,2,3,5,3,1,4,3,3,1,2,3],
							[5,4,7,11,1,9,12,5,6,3,2,5,3,1,4,5,5,1,2,3],
							[12,5,10,10,4,7,9,27,5,5,4,6,5,3,8,11,9,2,3,7],
							[2,5,5,4,2,7,4,2,15,2,2,3,2,2,3,3,2,2,3,2],
							[3,2,2,2,2,2,2,2,2,10,6,2,6,5,2,3,4,1,3,9],
							[6,4,4,3,2,6,4,3,5,15,34,4,20,13,5,4,6,6,7,13],
							[6,18,10,8,2,10,8,5,8,5,4,24,9,2,6,8,8,4,3,5],
							[1,1,1,1,0,1,1,1,1,2,3,2,6,2,1,1,1,1,1,2],
							[2,1,2,1,1,1,1,1,3,5,6,1,4,32,1,2,2,4,20,3],
							[7,5,5,4,3,5,4,5,5,3,3,4,3,2,20,6,5,1,2,4],
							[9,6,8,7,7,6,7,9,6,5,4,7,5,3,9,10,9,4,4,6],
							[8,5,6,6,4,5,5,6,4,6,4,6,5,3,6,8,11,2,3,6],
							[0,2,0,0,0,0,0,0,1,0,1,0,0,1,0,1,0,55,1,0],
							[1,1,2,1,3,1,1,1,3,2,2,1,2,15,1,2,2,3,31,2],
							[7,4,4,4,4,4,4,4,5,4,15,10,4,10,5,5,5,72,4,17]
							] , 

							[
							[5,-2,-1,-2,-1,-1,-1,0,-2,-1,-1,-1,-1,-2,-1,1,0,-2,-2,0],
							[-2,7,0,-1,-3,1,0,-2,0,-3,-2,3,-1,-2,-2,-1,-1,-2,-1,-2],
							[-1,0,6,2,-2,0,0,0,1,-2,-3,0,-2,-2,-2,1,0,-4,-2,-3],
							[-2,-1,2,7,-3,0,2,-1,0,-4,-3,0,-3,-4,-1,0,-1,-4,-2,-3],
							[-1,-3,-2,-3,12,-3,-3,-3,-3,-3,-2,-3,-2,-2,-4,-1,-1,-5,-3,-1],
							[-1,1,0,0,-3,6,2,-2,1,-2,-2,1,0,-4,-1,0,-1,-2,-1,-3],
							[-1,0,0,2,-3,2,6,-2,0,-3,-2,1,-2,-3,0,0,-1,-3,-2,-3],
							[0,-2,0,-1,-3,-2,-2,7,-2,-4,-3,-2,-2,-3,-2,0,-2,-2,-3,-3],
							[-2,0,1,0,-3,1,0,-2,10,-3,-2,-1,0,-2,-2,-1,-2,-3,2,-3],
							[-1,-3,-2,-4,-3,-2,-3,-4,-3,5,2,-3,2,0,-2,-2,-1,-2,0,3],
							[-1,-2,-3,-3,-2,-2,-2,-3,-2,2,5,-3,2,1,-3,-3,-1,-2,0,1],
							[-1,3,0,0,-3,1,1,-2,-1,-3,-3,5,-1,-3,-1,-1,-1,-2,-1,-2],
							[-1,-1,-2,-3,-2,0,-2,-2,0,2,2,-1,6,0,-2,-2,-1,-2,0,1],
							[-2,-2,-2,-4,-2,-4,-3,-3,-2,0,1,-3,0,8,-3,-2,-1,1,3,0],
							[-1,-2,-2,-1,-4,-1,0,-2,-2,-2,-3,-1,-2,-3,9,-1,-1,-3,-3,-3],
							[1,-1,1,0,-1,0,0,0,-1,-2,-3,-1,-2,-2,-1,4,2,-4,-2,-1],
							[0,-1,0,-1,-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,2,5,-3,-1,0],
							[-2,-2,-4,-4,-5,-2,-3,-2,-3,-2,-2,-2,-2,1,-3,-4,-3,15,3,-3],
							[-2,-1,-2,-2,-3,-1,-2,-3,2,0,0,-1,0,3,-3,-2,-1,3,8,-1],
							[0,-2,-3,-3,-1,-3,-3,-3,-3,3,1,-2,1,0,-3,-1,0,-3,-1,5]
							] ,

							[
							[4,-1,-2,-2,0,-1,-1,0,-2,-1,-1,-1,-1,-2,-1,1,0,-3,-2,0],
							[-1,5,0,-2,-3,1,0,-2,0,-3,-2,2,-1,-3,-2,-1,-1,-3,-2,-3],
							[-2,0,6,1,-3,0,0,0,1,-3,-3,0,-2,-3,-2,1,0,-4,-2,-3],
							[-2,-2,1,6,-3,0,2,-1,-1,-3,-4,-1,-3,-3,-1,0,-1,-4,-3,-3],
							[0,-3,-3,-3,9,-3,-4,-3,-3,-1,-1,-3,-1,-2,-3,-1,-1,-2,-2,-1],
							[-1,1,0,0,-3,5,2,-2,0,-3,-2,1,0,-3,-1,0,-1,-2,-1,-2],
							[-1,0,0,2,-4,2,5,-2,0,-3,-3,1,-2,-3,-1,0,-1,-3,-2,-2],
							[0,-2,0,-1,-3,-2,-2,6,-2,-4,-4,-2,-3,-3,-2,0,-2,-2,-3,-3],
							[-2,0,1,-1,-3,0,0,-2,8,-3,-3,-1,-2,-1,-2,-1,-2,-2,2,-3],
							[-1,-3,-3,-3,-1,-3,-3,-4,-3,4,2,-3,1,0,-3,-2,-1,-3,-1,3],
							[-1,-2,-3,-4,-1,-2,-3,-4,-3,2,4,-2,2,0,-3,-2,-1,-2,-1,1],
							[-1,2,0,-1,-3,1,1,-2,-1,-3,-2,5,-1,-3,-1,0,-1,-3,-2,-2],
							[-1,-1,-2,-3,-1,0,-2,-3,-2,1,2,-1,5,0,-2,-1,-1,-1,-1,1],
							[-2,-3,-3,-3,-2,-3,-3,-3,-1,0,0,-3,0,6,-4,-2,-2,1,3,-1],
							[-1,-2,-2,-1,-3,-1,-1,-2,-2,-3,-3,-1,-2,-4,7,-1,-1,-4,-3,-2],
							[1,-1,1,0,-1,0,0,0,-1,-2,-2,0,-1,-2,-1,4,1,-3,-2,-2],
							[0,-1,0,-1,-1,-1,-1,-2,-2,-1,-1,-1,-1,-2,-1,1,5,-2,-2,0],
							[-3,-3,-4,-4,-2,-2,-3,-2,-2,-3,-2,-3,-1,1,-4,-3,-2,11,2,-3],
							[-2,-2,-2,-3,-2,-1,-2,-3,2,-1,-1,-2,-1,3,-3,-2,-2,2,7,-1],
							[0,-3,-3,-3,-1,-2,-2,-3,-3,3,1,-2,1,-1,-2,-2,0,-3,-1,4],
							]
						];



	
	$scope.matrixtype = "Nucleotides";

	$scope.items = [];
  	$scope.newitem = '';

  	$scope.alignmethod = "global";
  	
	$scope.add = function(){
    	$scope.items.push($scope.newitem);
    	$('#add').attr('disabled',true);
  	}

  	$scope.del = function(i){
    	$scope.items.splice(i,1);
    	$('#add').attr('disabled',false);
    	$scope.parentObj.matname="";
    	$scope.parentObj.match="";
    	$scope.parentObj.mismatch="";
    }


  	$scope.parentObj = {matname:'' , match:'' , mismatch:''};
  	$scope.instatus = false;
  	$scope.inmessage = "";

  	$scope.insert = function(oindex){
  		var tempmat = []; 
  		var n = 0;
  		if($scope.matrixtype == "Nucleotides"){
  			$scope.matrix1.push($scope.parentObj.matname);
  			n=4;
  		}
  		else{
  			$scope.matrix2.push($scope.parentObj.matname);
  			n=20;
  		}

  		for(var i=0;i<n;i++){
  				var temp = [];
  				for(var j=0;j<n;j++){
  					if(i == j)
  						temp.push($scope.parentObj.match);
  					else
  						temp.push($scope.parentObj.mismatch);
  				}
  				tempmat.push(temp);
  			}

  			if($scope.matrixtype == "Nucleotides"){
  				$scope.submatrixN.push(tempmat);
  			}
  			else{
  				$scope.submatrixP.push(tempmat);
  			}
  			
  		console.log($scope.submatrixN[2][0][0]);

  		$scope.del(oindex);
  		$scope.inmessage = "Inserted matrix successfully";
  		$scope.instatus = true;
  	}        

  	$scope.closeAlert = function(){
  		$scope.instatus = false;
  	}
	

});